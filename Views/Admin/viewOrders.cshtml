@model IEnumerable<WebWebWeb.Order>

<!DOCTYPE html>
<html>
<head>
  <style>
      .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: rgba(255, 255, 255, 0.8); /* Set the background color with transparency */
      border: 1px solid #ccc;
      padding: 20px;
      max-width: 400px;
      max-height: 400px;
      overflow: auto;
    }



    .table {
      width: 100%;
      border-collapse: collapse;
    }


   .back-link {
  display: inline-block;
  font-size: 30px;
  color: #f26522; /* Custom color */
  text-decoration: none;
  transition: transform 0.3s;
}

.back-link:hover {
  transform: scale(1.2); /* Increase the size on hover */
}

.back-link i {
  padding-right: 5px; /* Add some spacing between the icon and text if needed */
}

    .table th,
    .table td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    .table th {
      background-color: #f2f2f2;
      font-weight: bold;
    }

    .table tr:nth-child(even) {
      background-color: #f9f9f9;
    }

    .table tr:hover {
      background-color: #f5f5f5;
    }

h1{
    text-align:center;
}
  </style>

  <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
  <a href="/Admin/Signin" class="back-link">
  <i class="fa fa-arrow-left"></i> Back
</a>
  <h3>@TempData["visit"]</h3>
  <h1>List of orders</h1>
</head>
<body>
  <table class="table">
    <thead>
      <tr>
        <th>Order Id</th>
        <th>Order Date</th>
        <th>Customer Name</th>
        <th>Delivery Address</th>
        <th>City</th>
        <th>Zip</th>
        <th>Email</th>
        <th>Cnn</th>
        <th>Cvv</th>
        <th>Total Amount</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var order in Model)
      {
                ViewData["orderid"] = order.OrderId;
                <partial name="_PartialOrder" model="@order" />
      }
            
       
    </tbody>
  </table>

  <script>
    function showOrderSummary(orderId) {
      // Call your view component to show the corresponding order items
      // You can use AJAX or any other method to fetch the data and update the view
      // For simplicity, let's assume you have a JavaScript function to toggle the visibility of the order summary
      toggleOrderSummaryVisibility(orderId);
    }

    function toggleOrderSummaryVisibility(orderId) {
      var orderSummary = document.getElementById('order-summary-' + orderId);
      orderSummary.style.display = orderSummary.style.display === 'none' ? 'block' : 'none';
    }
  </script>


  @foreach (var order in Model)
  {
                ViewData["orderid"] = order.OrderId;
                <div id="order-summary-@order.OrderId" class="popup" style="display: none;">
                <h2>Order @ViewData["orderid"] Item List:</h2>
                <vc:order-summary></vc:order-summary>
                </div>
  }
   
</body>
</html>